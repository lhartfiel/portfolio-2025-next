name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkout backend (Django) repo
        uses: actions/checkout@v4
        with:
          repository: lhartfiel/portfoliodjango
          path: backend
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11" # or your version

      - name: Install Python dependencies
        run: pip install -r backend/requirements.txt

      - name: Run Django migrations
        run: python backend/manage.py migrate --noinput

      - name: Start Django backend
        run: |
          nohup python backend/manage.py runserver 127.0.0.1:8000 > django.log 2>&1 &
      - name: Wait for Django server to be ready
        run: |
          until curl --fail http://127.0.0.1:8000/graphql; do
            echo "Waiting for Django backend..."
            sleep 5
          done

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Set NEXT_PUBLIC_GRAPHQL_URL for build
        run: echo "NEXT_PUBLIC_GRAPHQL_URL=http://127.0.0.1:8000/graphql" >> $GITHUB_ENV

      # Resore the cache
      - name: Cache Next.js build and NPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build the application
      - name: Build application
        run: npm run build

      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
